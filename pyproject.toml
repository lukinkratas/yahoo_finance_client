[project]
name = "yafin"
version = "0.1.0"
description = "Unofficial Yahoo Finance API asynchronous client"
readme = "README.md"
requires-python = ">=3.9"
license-files = ["LICENSE"]
authors = [{ name = "Lukin Kratas" }]
keywords = ["yahoo finance", "finance", "api client"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
]
dependencies = [
    "curl-cffi>=0.13.0",
]
[dependency-groups]
dev = [
    "ruff>=0.12.12",
    "mypy>=1.17.1",
    "pytest>=7.0.0",
    "pytest-mock>=3.15.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-mock>=3.15.0",
    "pytest-asyncio>=1.1.0",
    "pytest-cov>=4.0.0",
]
performance = [
    "pytest>=7.0.0",
    "pytest-asyncio>=1.1.0",
    "pytest-benchmark>=5.1.0",
    "yfinance>=0.2.66",
]

[project.urls]
Homepage = "https://github.com/lukinkratas/yahoo_finance_client"
Repository = "https://github.com/lukinkratas/yahoo_finance_client"
Issues = "https://github.com/lukinkratas/yahoo_finance_client/issues"

[tool.ruff]
line-length = 88
indent-width = 4
# extend-exclude = ["tests/unit/conftest.py"]

[tool.ruff.lint]
extend-select = [
    "E501", # line too long
    "N",    # PEP8 naming
    "R",    # RSE - flake8 raise, RET - flake8 return, RUF - ruff specific
    "I",    # isort
    "C901", # mccabe - complexity
    "PD",   # pandas
    "NPY",  # numpy
    "D"     # pydocstyle
]
ignore = [
    "D100", # missing docstring in public module
    "D104", # missing docstring in public package
    "D107", # missing docstring in __init__
    "D205"  # one blank line required between summary line and description
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.mypy]
mypy_path = ["src", "scripts"]
strict = true
explicit_package_bases = true
check_untyped_defs = true
disable_error_code = ["no-any-return", "misc"]

[tool.pytest.ini_options]
# pythonpath = "."
markers = [
    "integration: marks tests that hit real external services or APIs",
    "performance: marks tests as performance benchmarks",
]
# addopts = "--cov=yafin --cov-report=term-missing --cov-branch"
testpaths = ["tests"]
